/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "SqueezeboxArduino_menu.h"

// Global variable declarations

U8g2MenuRenderer renderer;

// Global Menu Item declarations

const PROGMEM BooleanMenuInfo minfo3333 = { "3-3-3-3", 3, 0xffff, 1, NO_CALLBACK, NAMING_YES_NO };
BooleanMenuItem menu3333(&minfo3333, false, NULL);
const char enumStr00110055_0[] PROGMEM = "0-0-0-0";
const char enumStr00110055_1[] PROGMEM = "1-1-1-1";
const char enumStr00110055_2[] PROGMEM = ":-:-:-:";
const char* const enumStr00110055[] PROGMEM  = { enumStr00110055_0, enumStr00110055_1, enumStr00110055_2 };
const PROGMEM EnumMenuInfo minfo00110055 = { "00110055", 2, 0xffff, 2, NO_CALLBACK, enumStr00110055 };
EnumMenuItem menu00110055(&minfo00110055, 0, &menu3333);
const PROGMEM AnalogMenuInfo minfo8013713831 = { "80137 13831", 1, 0xffff, 100, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menu8013713831(&minfo8013713831, 0, &menu00110055);
const PROGMEM ConnectorLocalInfo applicationInfo = { "101010102", "e6b47a70-cca5-4d50-8ca9-b952db08d50d" };

// Set up code

void setupMenu() {
    renderer.setGraphicsDevice(&oled, &myConfig);
    switches.initialiseInterrupt(io23017, true);
    menuMgr.initForEncoder(&renderer, &menu8013713831, ENCODER_PIN_A, ENCODER_PIN_B, ENCODER_PIN_OK);
}

